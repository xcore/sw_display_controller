<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.5.8">
  <compounddef id="display__controller_8h" kind="file">
    <compoundname>display_controller.h</compoundname>
    <includes local="no">stdint.h</includes>
    <incdepgraph>
      <node id="1">
        <label>stdint.h</label>
      </node>
      <node id="0">
        <label>_build/.doxygen/src/display_controller.h</label>
        <link refid="display_controller.h"/>
        <childnode refid="1" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="display__controller_8h_19a869657380d654adf785e3243415c48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void display_controller</definition>
        <argsstring>(chanend c_client, chanend c_lcd, chanend c_sdram)</argsstring>
        <name>display_controller</name>
        <param>
          <type>chanend</type>
          <declname>c_client</declname>
        </param>
        <param>
          <type>chanend</type>
          <declname>c_lcd</declname>
        </param>
        <param>
          <type>chanend</type>
          <declname>c_sdram</declname>
        </param>
        <briefdescription>
<para>Function to manage the LCd c_server and SDRAM server whilst maintaining image buffers. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c_client</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel from the display_controller to the client application. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c_lcd</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel from the display_controller to the LCd c_server. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c_sdram</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel from the display_controller to the SDRAM server. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Sudha/Git/sw_display_controller/module_display_controller/doc/_build/.doxygen/src/display_controller.h" line="13"/>
      </memberdef>
      <memberdef kind="function" id="display__controller_8h_1f999a7195740d507983d3ec1ebdb96a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void display_controller_image_read_line</definition>
        <argsstring>(chanend c_server, unsigned line, unsigned image_no, unsigned buffer[])</argsstring>
        <name>display_controller_image_read_line</name>
        <param>
          <type>chanend</type>
          <declname>c_server</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>line</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>image_no</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>buffer</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>The function reads a line of pixel data from the SDRAM. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c_server</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel from the client application to the display_controller. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>The image line number to be read. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>image_no</parametername>
</parameternamelist>
<parameterdescription>
<para>The image number whose line is to be read. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer[]</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer which is to be filled with the read data. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para>image_write_line </para><para>image_write_line_p </para><para>image_read_partial_line </para><para>image_read_partial_line_p </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Sudha/Git/sw_display_controller/module_display_controller/doc/_build/.doxygen/src/display_controller.h" line="27"/>
      </memberdef>
      <memberdef kind="function" id="display__controller_8h_12f4117dfd8a9649e55190ccf7d66095b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void display_controller_image_read_line_p</definition>
        <argsstring>(chanend c_server, unsigned line, unsigned image_no, intptr_t buffer)</argsstring>
        <name>display_controller_image_read_line_p</name>
        <param>
          <type>chanend</type>
          <declname>c_server</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>line</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>image_no</declname>
        </param>
        <param>
          <type>intptr_t</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>The function reads a line of pixel data from the SDRAM. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c_server</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel from the client application to the display_controller. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>The image line number to be read. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>image_no</parametername>
</parameternamelist>
<parameterdescription>
<para>The image number whose line is to be read. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the buffer which is to be filled with the read data. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para>image_write_line </para><para>image_write_line_p </para><para>image_read_partial_line </para><para>image_read_partial_line_p </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Sudha/Git/sw_display_controller/module_display_controller/doc/_build/.doxygen/src/display_controller.h" line="41"/>
      </memberdef>
      <memberdef kind="function" id="display__controller_8h_11de198f2df96c4008ec16c8932c89893" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void display_controller_image_write_line</definition>
        <argsstring>(chanend c_server, unsigned line, unsigned image_no, unsigned buffer[])</argsstring>
        <name>display_controller_image_write_line</name>
        <param>
          <type>chanend</type>
          <declname>c_server</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>line</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>image_no</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>buffer</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>The function writes a line of pixel data to the registered image in SDRAM. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c_server</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel from the client application to the display_controller. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>The image line number to be written. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>image_no</parametername>
</parameternamelist>
<parameterdescription>
<para>The image number whose line is to be written. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer[]</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer which is to be written to the image. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para>image_read_line </para><para>image_read_line_p </para><para>image_read_partial_line </para><para>image_read_partial_line_p </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Sudha/Git/sw_display_controller/module_display_controller/doc/_build/.doxygen/src/display_controller.h" line="55"/>
      </memberdef>
      <memberdef kind="function" id="display__controller_8h_10ea67be65bf549b28c4fc758575ee9a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void display_controller_image_write_line_p</definition>
        <argsstring>(chanend c_server, unsigned line, unsigned image_no, intptr_t buffer)</argsstring>
        <name>display_controller_image_write_line_p</name>
        <param>
          <type>chanend</type>
          <declname>c_server</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>line</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>image_no</declname>
        </param>
        <param>
          <type>intptr_t</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>The function writes a line of pixel data to the registered image in SDRAM. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c_server</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel from the client application to the display_controller. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>The image line number to be written. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>image_no</parametername>
</parameternamelist>
<parameterdescription>
<para>The image number whose line is to be written. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the buffer which is to be written to the image. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para>image_read_line </para><para>image_read_line_p </para><para>image_read_partial_line </para><para>image_read_partial_line_p </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Sudha/Git/sw_display_controller/module_display_controller/doc/_build/.doxygen/src/display_controller.h" line="69"/>
      </memberdef>
      <memberdef kind="function" id="display__controller_8h_19860cfdc5715facabbd0e7450dd8e92f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void display_controller_image_read_partial_line</definition>
        <argsstring>(chanend c_server, unsigned line, unsigned image_no, unsigned buffer[], unsigned line_offset, unsigned word_count, unsigned buffer_offset)</argsstring>
        <name>display_controller_image_read_partial_line</name>
        <param>
          <type>chanend</type>
          <declname>c_server</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>line</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>image_no</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>buffer</declname>
          <array>[]</array>
        </param>
        <param>
          <type>unsigned</type>
          <declname>line_offset</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>word_count</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>buffer_offset</declname>
        </param>
        <briefdescription>
<para>The function writes a partial line of pixel data to the registered image in SDRAM. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c_server</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel from the client application to the display_controller. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>The image line number to be written. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>image_no</parametername>
</parameternamelist>
<parameterdescription>
<para>The image number whose line is to be written. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer[]</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer which is to be written to the image. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>line_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in pixels to begin the write of the image line from. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>word_count</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of words to write to the image line. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset from the begining of the buffer to write from in words. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para>image_read_line </para><para>image_read_line_p </para><para>image_write_line </para><para>image_write_line_p </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Sudha/Git/sw_display_controller/module_display_controller/doc/_build/.doxygen/src/display_controller.h" line="87"/>
      </memberdef>
      <memberdef kind="function" id="display__controller_8h_13874bc61173c6566f3cc58c8c97dd39c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void display_controller_image_read_partial_line_p</definition>
        <argsstring>(chanend c_server, unsigned line, unsigned image_no, intptr_t buffer, unsigned line_offset, unsigned word_count, unsigned buffer_offset)</argsstring>
        <name>display_controller_image_read_partial_line_p</name>
        <param>
          <type>chanend</type>
          <declname>c_server</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>line</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>image_no</declname>
        </param>
        <param>
          <type>intptr_t</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>line_offset</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>word_count</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>buffer_offset</declname>
        </param>
        <briefdescription>
<para>The function writes a partial line of pixel data to the registered image in SDRAM. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c_server</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel from the client application to the display_controller. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>The image line number to be written. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>image_no</parametername>
</parameternamelist>
<parameterdescription>
<para>The image number whose line is to be written. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the buffer which is to be written to the image. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>line_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in pixels to begin the write of the image line from. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>word_count</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of words to write to the image line. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer_offset</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset from the begining of the buffer to write from in words. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para>image_read_line </para><para>image_read_line_p </para><para>image_write_line </para><para>image_write_line_p </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Sudha/Git/sw_display_controller/module_display_controller/doc/_build/.doxygen/src/display_controller.h" line="105"/>
      </memberdef>
      <memberdef kind="function" id="display__controller_8h_15406cb6f407e02b4db51c43fb286c99a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned</type>
        <definition>unsigned display_controller_register_image</definition>
        <argsstring>(chanend c_server, unsigned img_width_words, unsigned img_height_lines)</argsstring>
        <name>display_controller_register_image</name>
        <param>
          <type>chanend</type>
          <declname>c_server</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>img_width_words</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>img_height_lines</declname>
        </param>
        <briefdescription>
<para>Registers an image with the display controller. </para>        </briefdescription>
        <detaileddescription>
<para>Returns an image handle to refer to the image from then on.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>server</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel from the client application to the display_controller. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>img_width_words</parametername>
</parameternamelist>
<parameterdescription>
<para>The width of the image in words. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>img_height_lines</parametername>
</parameternamelist>
<parameterdescription>
<para>The height of the image in lines(pixels). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Sudha/Git/sw_display_controller/module_display_controller/doc/_build/.doxygen/src/display_controller.h" line="115"/>
      </memberdef>
      <memberdef kind="function" id="display__controller_8h_1bb3aa2a30ac4b3c01bd09369032ca260" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void display_controller_wait_until_idle_p</definition>
        <argsstring>(chanend c_server, intptr_t buffer)</argsstring>
        <name>display_controller_wait_until_idle_p</name>
        <param>
          <type>chanend</type>
          <declname>c_server</declname>
        </param>
        <param>
          <type>intptr_t</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>Makes the display controller wait until the current SDRAM service has completed. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c_server</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel from the client application to the display_controller. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the buffer which is to be written to the image. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para>wait_until_idle </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Sudha/Git/sw_display_controller/module_display_controller/doc/_build/.doxygen/src/display_controller.h" line="123"/>
      </memberdef>
      <memberdef kind="function" id="display__controller_8h_165727bfc4a571599a918bd5a2c50c264" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void display_controller_wait_until_idle</definition>
        <argsstring>(chanend c_server, unsigned buffer[])</argsstring>
        <name>display_controller_wait_until_idle</name>
        <param>
          <type>chanend</type>
          <declname>c_server</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>buffer</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Makes the display controller wait until the current SDRAM service has completed. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>server</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel from the client application to the display_controller. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The buffer which is to be written to the image. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para>wait_until_idle_p </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Sudha/Git/sw_display_controller/module_display_controller/doc/_build/.doxygen/src/display_controller.h" line="131"/>
      </memberdef>
      <memberdef kind="function" id="display__controller_8h_1cb018a453a5884280fdd9307cff2df37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void display_controller_frame_buffer_commit</definition>
        <argsstring>(chanend c_server, unsigned image_no)</argsstring>
        <name>display_controller_frame_buffer_commit</name>
        <param>
          <type>chanend</type>
          <declname>c_server</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>image_no</declname>
        </param>
        <briefdescription>
<para>Commits the image to the display controller to be displayed on the LCD screen when the current image is completly displayed. </para>        </briefdescription>
        <detaileddescription>
<para>The display controller contains a single next image number buffer meaning that if the buffer is empty (the previously commited image is already on the LCD screen) then the command will return immediatly. If the buffer is full then this function will block until the current image is on the LCD screen and the buffer is ready for a new entry. This behaviour ensures that frame commits will not overwrite.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c_server</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel from the client application to the display_controller. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>image_no</parametername>
</parameternamelist>
<parameterdescription>
<para>The image handle of the image to be displayed as per the described behaviour. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Sudha/Git/sw_display_controller/module_display_controller/doc/_build/.doxygen/src/display_controller.h" line="143"/>
      </memberdef>
      <memberdef kind="function" id="display__controller_8h_16a00bd3920c3083b723f59c47b9a59a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void display_controller_frame_buffer_init</definition>
        <argsstring>(chanend c_server, unsigned image_no)</argsstring>
        <name>display_controller_frame_buffer_init</name>
        <param>
          <type>chanend</type>
          <declname>c_server</declname>
        </param>
        <param>
          <type>unsigned</type>
          <declname>image_no</declname>
        </param>
        <briefdescription>
<para>Commits the image to the display controller to be displayed on the LCD screen and initialises the display controller. </para>        </briefdescription>
        <detaileddescription>
<para>This must only be called once at the begining of the display controllers use.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>server</parametername>
</parameternamelist>
<parameterdescription>
<para>The channel from the client application to the display_controller. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>image_no</parametername>
</parameternamelist>
<parameterdescription>
<para>The image handle of the image to be displayed as per the described behaviour. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="D:/Sudha/Git/sw_display_controller/module_display_controller/doc/_build/.doxygen/src/display_controller.h" line="152"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>_display_controller_h_</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>_display_controller_h_</highlight></codeline>
<codeline lineno="3"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="display__controller_8h_19a869657380d654adf785e3243415c48" kindref="member" tooltip="Function to manage the LCd c_server and SDRAM server whilst maintaining image buffers...">display_controller</ref>(chanend<sp/>c_client,<sp/>chanend<sp/>c_lcd,<sp/>chanend<sp/>c_sdram);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="display__controller_8h_1f999a7195740d507983d3ec1ebdb96a3" kindref="member" tooltip="The function reads a line of pixel data from the SDRAM.">display_controller_image_read_line</ref>(chanend<sp/>c_server,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>line,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>image_no,</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>buffer[]);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="display__controller_8h_12f4117dfd8a9649e55190ccf7d66095b" kindref="member" tooltip="The function reads a line of pixel data from the SDRAM.">display_controller_image_read_line_p</ref>(chanend<sp/>c_server,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>line,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>image_no,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>intptr_t<sp/>buffer);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="display__controller_8h_11de198f2df96c4008ec16c8932c89893" kindref="member" tooltip="The function writes a line of pixel data to the registered image in SDRAM.">display_controller_image_write_line</ref>(chanend<sp/>c_server,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>line,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>image_no,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>buffer[]);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="display__controller_8h_10ea67be65bf549b28c4fc758575ee9a7" kindref="member" tooltip="The function writes a line of pixel data to the registered image in SDRAM.">display_controller_image_write_line_p</ref>(chanend<sp/>c_server,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>line,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>image_no,</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>intptr_t<sp/>buffer);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="display__controller_8h_19860cfdc5715facabbd0e7450dd8e92f" kindref="member" tooltip="The function writes a partial line of pixel data to the registered image in SDRAM...">display_controller_image_read_partial_line</ref>(chanend<sp/>c_server,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>line,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>image_no,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>buffer[],<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>line_offset,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>word_count,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>buffer_offset);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="display__controller_8h_13874bc61173c6566f3cc58c8c97dd39c" kindref="member" tooltip="The function writes a partial line of pixel data to the registered image in SDRAM...">display_controller_image_read_partial_line_p</ref>(chanend<sp/>c_server,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>line,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>image_no,<sp/>intptr_t<sp/>buffer,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>line_offset,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>word_count,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>buffer_offset);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/><ref refid="display__controller_8h_15406cb6f407e02b4db51c43fb286c99a" kindref="member" tooltip="Registers an image with the display controller.">display_controller_register_image</ref>(chanend<sp/>c_server,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>img_width_words,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>img_height_lines);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="display__controller_8h_1bb3aa2a30ac4b3c01bd09369032ca260" kindref="member" tooltip="Makes the display controller wait until the current SDRAM service has completed.">display_controller_wait_until_idle_p</ref>(chanend<sp/>c_server,<sp/>intptr_t<sp/>buffer);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="display__controller_8h_165727bfc4a571599a918bd5a2c50c264" kindref="member" tooltip="Makes the display controller wait until the current SDRAM service has completed.">display_controller_wait_until_idle</ref>(chanend<sp/>c_server,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>buffer[]);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="display__controller_8h_1cb018a453a5884280fdd9307cff2df37" kindref="member" tooltip="Commits the image to the display controller to be displayed on the LCD screen when...">display_controller_frame_buffer_commit</ref>(chanend<sp/>c_server,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>image_no);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="display__controller_8h_16a00bd3920c3083b723f59c47b9a59a0" kindref="member" tooltip="Commits the image to the display controller to be displayed on the LCD screen and...">display_controller_frame_buffer_init</ref>(chanend<sp/>c_server,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>image_no);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="155"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="D:/Sudha/Git/sw_display_controller/module_display_controller/doc/_build/.doxygen/src/display_controller.h"/>
  </compounddef>
</doxygen>
